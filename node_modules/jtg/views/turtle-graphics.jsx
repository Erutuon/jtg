/*
 * Copyright (c) 2015 by Greg Reimer <gregreimer@gmail.com>
 * All Rights Reserved.
 */

var Turtle = require('jtg/models/turtle')
  , React = require('react')

module.exports = React.createClass({

  getInitialState() {
    return {}
  },

  componentDidMount() {

    var cont = this.refs.container.getDOMNode()
      , width = cont.offsetWidth
      , height = cont.offsetHeight

    this.setState({
      width: width,
      height: height
    })
  },

  click() {

    var field = this.refs.field.getDOMNode()
      , draw = this.refs.draw.getDOMNode()
      , turtle = this.refs.turtle.getDOMNode()

    var t = new Turtle({
      fieldCanvas: field,
      drawCanvas: draw,
      turtleCanvas: turtle
    })

    Turtle.run(function *() {
      for (let i=0; i < 6; i++) {
        yield t.fd(100)
        yield t.rt(60)
      }
    }, 1)
  },

  render() {

    var ratio = window.devicePixelRatio
      , width = this.state.width
      , height = this.state.height

    if (!width) return <div ref="container" className="turtle-graphics"/>

    return <div ref="container" className="turtle-graphics" onClick={this.click}>
      <canvas width={width * ratio} height={height * ratio} ref="field" style={{pointerEvents:'none'}}/>
      <canvas width={width * ratio} height={height * ratio} ref="draw"/>
      <canvas width={width * ratio} height={height * ratio} ref="turtle"/>
    </div>
  }
})

